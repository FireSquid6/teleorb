name: Release New Version
on:
  push:
    tags:
      - "*"

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that
      # your project is available for Godot to export
      - name: checkout
        uses: actions/checkout@v3.3.0

      - name: export and publishPush gameserver container to registry game
        id: export
        # Use latest version (see releases for all versions)
        uses: firebelley/godot-export@v5.2.0
        with:
          # Defining all the required inputs
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.2/Godot_v4.2-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.2/Godot_v4.2-stable_export_templates.tpz
          relative_project_path: ./game
          archive_output: true

        # This release action has worked well for me. However, you can most likely use any release action of your choosing.
        # https://github.com/ncipollo/release-action
      - name: create release
        uses: ncipollo/release-action@v1.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ github.ref_name }}
          artifacts: ${{ steps.export.outputs.archive_directory }}/*
  publish_to_itch:
    runs-on: ubuntu-latest
    needs: export_game
    name: Publish Game to Itch.io
    strategy:
      fail-fast: true
      matrix:
        file: ["Windows.Desktop.zip", "LinuxX11.zip", "macOS.zip", "Server.zip"]
        channel: ["win", "linux-x11", "mac", "linux-headless"]
    steps:
      - name: Download zip file
        run: wget https://github.com/firesquid6/teleorb/releases/download/${{ github.ref_name }}/${{ matrix.file }} -o ./${{ matrix.file }}
      - name: Publish to itch.io
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.BUTLER_API_KEY }}
          gameData: ./${{ matrix.file }}
          itchUsername: firesquid
          itchGameId: teleorb
          buildChannel: ${{ matrix.chanel }}
          buildNumber: ${{ github.ref_name }}
  publish_containers:
    runs-on: ubuntu-latest
    permissions: write-all

    name: Publish Containers
    steps:
      - name: checkout
        uses: actions/checkout@v3.3.0
      - name: log in to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: build and push
        run: ./scripts/publish-containers.sh ${{ github.ref_name }}

